#!/bin/bash
usage()
{
cat << EOF
usage: $0 options

OPTIONS:
   -h      Master server address
   -U      The replication user defined in Master's pg_hba.conf file
EOF
}

abort() 
{
  echo -e "\n>> Aborted pg_basebackup <<"
}

while getopts h:U: option
do
  case "${option}"
  in
    U) SLAVE_USER=${OPTARG};;
    h) MASTER_ADDRESS=${OPTARG};;
  esac
done

if [[ -z $SLAVE_USER ]] || [[ -z $MASTER_ADDRESS ]]
then
  usage
  exit 1
else
  echo "Starting pg_basebackup..."

  read -p "This will replace all existing data in /var/lib/postgresql/9.1/main. ARE YOU SURE? [Y/n] " response

  if [[ $response =~ ^[y|Y](es)?$ ]]
  then
    echo -e "\nRunning command: pg_basebackup -h $MASTER_ADDRESS -D /var/lib/postgresql/9.1/slave-backups-tmp -U $SLAVE_USER -v -Ft -z\n"
    time pg_basebackup -h $MASTER_ADDRESS -D /var/lib/postgresql/9.1/slave-backups-tmp -U $SLAVE_USER -v -Ft -z
    if [[ $? -eq 0 ]]
    then
      echo "\nUntarring file and moving data to /var/lib/postgresql/9.1/main"
      tar --exclude=pg_log --exclude=pg_xlog -xvf /var/lib/postgresql/9.1/slave-backups-tmp/base.tar.gz -C /var/lib/postgresql/9.1/main
      echo "\nRemoving basebackup tar file (cleaning up)"
      rm -rf /var/lib/postgresql/9.1/slave-backups-tmp
      echo "Starting postgres in standby mode."
      pg_ctlcluster 9.1 main restart
    else
      abort
    fi
  else
    abort
  fi
  exit 0
fi
